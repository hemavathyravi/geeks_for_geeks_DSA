

class Solution {
    // Function to return list containing vertices in Topological order.
    static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> adj) {
        // Your code here
        int[] indeg = new int[adj.size()];
        ArrayList<Integer> lst = new ArrayList<Integer>();
        for(int i=0;i<adj.size();i++){
            indeg[i]=0;
        }
        for(int i=0;i<adj.size();i++){
            for(int it:adj.get(i)){
                indeg[it]+=1;
            }
        }
        Queue<Integer> q = new LinkedList<>();
        for(int i=0;i<adj.size();i++){
            if(indeg[i]==0){
                q.add(i);
            }
        }
        while(!q.isEmpty()){
            int i=q.remove();
            lst.add(i);
            for(int it:adj.get(i)){
                indeg[it]-=1;
                if(indeg[it]==0){
                    q.add(it);
                }
                
            }
        }
        return lst;
        
    }
}
