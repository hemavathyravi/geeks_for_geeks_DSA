class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        int[] indeg = new int[adj.size()];
        Queue<Integer> q = new LinkedList<>();
        int cnt=0;
        for(int i=0;i<adj.size();i++){
            for(int adjnode:adj.get(i)){
                indeg[adjnode]+=1;
            }
        }
        for(int i=0;i<indeg.length;i++)
        {
            if(indeg[i]==0){
                q.add(i);
            }
        }
        
        while(!q.isEmpty()){
            int node= q.remove();
            cnt++;
            for(int it:adj.get(node)){
                indeg[it]-=1;
                if(indeg[it]==0){
                    q.add(it);
                }
            }
        }
        if(cnt!=V){
            return true;
        }
        return false;
    }
}
