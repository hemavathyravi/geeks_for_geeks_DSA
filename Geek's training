class Solution {
    public int maximumPoints(int arr[][], int N) {
        // code here
        int[][] dp = new int[N][4];
        int points;
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<4;j++)
            {
                dp[i][j]=-1;
            }
        }
        dp[0][0] = Math.max(arr[0][1], arr[0][2]);
        dp[0][1] = Math.max(arr[0][0], arr[0][2]);
        dp[0][2] = Math.max(arr[0][0], arr[0][1]);
        dp[0][3] = Math.max(arr[0][0], Math.max(arr[0][1], arr[0][2]));
        
        for(int i=1;i<N;i++)
        {
            for(int j=0;j<4;j++)
            {
                dp[i][j]=0;
                int maxi=0;
                
                    for(int task=0;task<3;task++)
                    {
                        if(j!=task)
                        {
                            points=arr[i][task]+dp[i-1][task];
                            maxi=Math.max(maxi,points);
                            
                        }
                        
                        
                    }
                    dp[i][j]=maxi;
                
                
            }
            
        }

        return dp[N-1][3];
    }
    public int f(int arr[][],int day,int last,int[][] dp)
    {
        int maxi=0;
        int points;
        if(dp[day][last]!=-1)
        return dp[day][last];
        if(day==0)
        {
            for(int i=0;i<3;i++)
            {
                if(i!=last)
                {
                    maxi=Math.max(arr[0][i],maxi);
                }
            }
            return maxi;
            
        }
        
        
        for(int i=0;i<3;i++)
        {
            if(i!=last)
            {
                points=arr[day][i]+f(arr,day-1,i,dp);
                maxi=Math.max(maxi,points);
                
            }
            
        }
        return dp[day][last]=maxi;
        
        
    }
}
