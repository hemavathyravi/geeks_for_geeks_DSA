class Solution {
    public int NthRoot(int n, int m) {
        int low = 1, high = m;
        int mid;
        
        while (low <= high) {
            mid = low + (high - low) / 2; // Avoid potential overflow
            int midn = func(mid, n, m);
            if (midn == 1) {
                return mid;
            } else if (midn == 0) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return -1;
    }

    int func(int mid, int n, int m) {
        long sum = 1;
        for (int i = 1; i <= n; i++) {
            sum *= mid;
            if (sum > m) {
                return 2;
            }
        }
        if (sum == m) {
            return 1;
        }
        return 0;
    }
}
