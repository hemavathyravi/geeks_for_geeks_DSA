
class Solution
{
    void merge(int arr[], int l, int m, int r)
    {
         
         List<Integer> temp = new ArrayList<>();
         int left=l;
         int right=m+1;
         while(left<=m&&right<=r)
         {
             if(arr[left]<arr[right])
             {
                 temp.add(arr[left]);
                 left++;
             }
             else if(arr[left]==arr[right])
             {
                 temp.add(arr[left]);
                 left++;
                 temp.add(arr[right]);
                 right++;
             }
             else 
             {
                 temp.add(arr[right]);
                 right++;
             }
             
         }
         while(left<=m)
         {
             temp.add(arr[left]);
             left++;
         }
         while(right<=r)
         {
             temp.add(arr[right]);
             right++;
         }
         int k=0;
         for(int i=l;i<=r;i++)
         {
             arr[i]=temp.get(k);
             k++;
         }
         
    }
    void mergeSort(int arr[], int l, int r)
    {
        
        if(l>=r) return;
        int mid =(l+r)/2;
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        merge(arr,l,mid,r);
    }
}
